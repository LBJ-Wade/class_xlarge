*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*
*  CLASS input parameter file  *
*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*

7a) file name root 'root' for all output files (if Cl requested, written to '<root>cl.dat'; if P(k) requested, written to '<root>pk.dat'; plus similar files for scalars, tensors, pairs of initial conditions, etc.; if file with input parameters requested, written to '<root>parameters.ini') (default: the input module sets automatically 'root' to 'output/<thisfilename>N_', where N is the first available integer number, starting from 00, to avoid erasing the output of previous runs)

root = testmine/test_dam_gr1p0_fnl0p0_

h =0.67
T_cmb = 2.725
Omega_b = 0.049
N_ur = 3.04
Omega_cdm = 0.251
Omega_k = 0.
#Omega_Lambda = 0.7
#Omega_fld = 0
#w0_fld = -1.0
#wa_fld = 0.
gr_epsilon = 1.0
f_NL = 0.0
YHe = 0.24
recombination = RECFAST
reio_parametrization = reio_camb
tau_reio = 0.09

----------------------------------------------------
----> define which perturbations should be computed:
----------------------------------------------------

1.a) list of output spectra requested:
- 'tCl' for temperature Cls,
- 'pCl' for polarization Cls,
- 'lCl' for CMB lensing potential Cls,
- 'nCl' (or 'dCl') for density number count Cls,
- 'sCl' for galaxy lensing potential Cls,
- 'mPk' for total matter power spectrum P(k) infered from gravitational potential,
- 'dTk' (or 'mTk') for density transfer functions for each species,
- 'vTk' for velocity transfer function for each species.
By defaut, the code will try to compute the following cross-correlation Cls (if available): temperature-polarisation, temperature-CMB lensing, polarization-CMB lensing, and density-lensing. Other cross-correlations are not computed because they would slow down the code considerably.
Can be left blank if you do not want to evolve cosmological perturbations at all. (default: set to blanck, no perturbation calculation)

#output = tCl,pCl,lCl
#output = tCl,pCl,lCl,mPk
#output = mPk,mTk
output = nCl

1.d) if you included 'nCl' (or 'dCl') in the list, you can take into account only some of the terms contributing to the obsevable number count fluctuation spectrum: matter density ('density'), redshift-space and Doppler distortions ('rsd'), lensing ('lensing'), or gravitational potential terms ('gr'). Put below the list of terms to be included (defaut: if this field is not passed, only 'dens' will be included)

#number count contributions = density, rsd, lensing, gr
number count contributions = density, rsd, gr

4) list of modes ('s' for scalars, 'v' for vectors, 't' for tensors). More than one letter allowed, can be attached or separated by arbitrary characters; letters can be small or capital. (default: set to 's')

modes = s
#modes = s,t

7) list of initial conditions for scalars ('ad' for adiabatic, 'bi' for baryon isocurvature, 'cdi' for CDM isocurvature, 'nid' for neutrino density isocurvature, 'niv' for neutrino velocity isocurvature). More than one of these allowed, can be attached or separated by arbitrary characters; letters can be small or capital. (default: set to 'ad')

ic = ad

gauge = synchronous

P_k_ini type = analytic_Pk
k_pivot = 0.002
A_s = 2.46e-9
n_s = 0.96

-------------------------------------
----> define format of final spectra:
-------------------------------------

1) maximum l for CLs:
- 'l_max_scalars' for CMB scalars (temperature, polarization, cmb lensing potential),
- 'l_max_tensors' for CMB tensors (temperature, polarization)
- 'l_max_lss'     for Large Scale Structure Cls (density, galaxy lensing potential)
Reducing 'l_max_lss' with respect to l_max_scalars reduces the execution time significantly
(default: set 'l_max_scalars' to 2500, 'l_max_tensors' to 500, 'l_max_lss' to 300)

#l_max_scalars = 2500
#l_max_tensors = 500
l_max_lss = 500

6) parameters for the the matter density number count (option 'nCl' (or 'dCl')) or galaxy lensing potential (option 'sCl') Cls:

6a) enter here a description of the selection functions W(z) of each redshift bin; selection can be set to 'gaussian', 'tophat' or 'dirac', then pass a list of N mean redshifts in growing order separated by comas, and 1 or N widths separated by comas. The width stands for one standard deviation of the gaussian (in z space), or for the half-width of the top-hat. Finally, non_diagonal sets the number of cross-correlation spectra that you want to calculate: 0 means only auto-correlation, 1 means only adjacent bins, and number of bins minus one means all correlations (default: set to 'gaussian',1,0.1,0)

selection = gaussian
selection_mean = 1.5
selection_width = 0.05

6b) It is possible to multiply the window function W(z) by a selection function 'dNdz' (number of objects per redshift interval). Type the name of the file containing the redshift in the first column and the number of objects in the second column (do not call it 'analytic*'). Set to 'analytic' to use instead the analytic expression from arXiv:1004.4640 (this function can be tuned in the module transfer.c, in the subroutine transfer_dNdz_analytic). Leave blank to use a uniform distribution (default).

dNdz_selection =

6c) It is possible to consider source number counts evolution. Type the name of the file containing the redshift on the first column and the number of objects on the second column (do not call it 'analytic*'). Set to 'analytic' to use instead the analytic expression from Eq. 48 of arXiv:1105.5292. Leave blank to use constant comoving number densities (default).

dNdz_evolution =

6d) mutiply the density by a constant 'bias' factor (default: 'bias' set to one)

bias = 1.5

6e) consider a constant magnification bias factor (default: 's_bias' set to zero)

s_bias = 0.2

7b) do you want headers at the beginning of each output file (giving precisions on the output units/ format) ? If 'headers' set to something containing the letter 'y' or 'Y', headers written, otherwise not written (default: written)

headers = yes

7c) in all output files, do you want columns to be normalized and ordered with the default CLASS definitions or with the CAMB definitions (often idential to the CMBFAST one) ? Set 'format' to either 'class', 'CLASS', 'camb' or 'CAMB' (default: 'class')

format = camb

7d) Do you want to write a table of background quantitites in a file? This will include H, densities, Omegas, various cosmological distances, sound horizon, etc., as a function of conformal time, proper time, scale factor. File created if 'write background'  set to something containing the letter 'y' or 'Y', file written, otherwise not written (default: not written)

write background = no

7i) Do you want a warning written in the standard output when an input parameter or value could not be interpreted ? If 'write warnings' set to something containing the letter 'y' or 'Y', warnings written, otherwise not written (default: not written)

write warnings = yes

----------------------------------------------------
----> amount of information sent to standard output:
----------------------------------------------------

Increase integer values to make each module more talkative (default: all set to 0)

input_verbose = 1
background_verbose = 1
thermodynamics_verbose = 1
perturbations_verbose = 1
transfer_verbose = 1
primordial_verbose = 1
spectra_verbose = 1
nonlinear_verbose = 1
lensing_verbose = 1
output_verbose = 1
